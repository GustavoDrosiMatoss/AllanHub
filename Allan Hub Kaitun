-- Allan Hub Configurado - Fluent (FINAL, GUI 1:1, sem notificacoes)
local function loadFluent()
    local ok, lib = pcall(function()
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/main/Fluent.lua"))()
    end)
    if ok and lib then return lib end
    ok, lib = pcall(function()
        return loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
    end)
    if ok and lib then return lib end
    local stub = {}
    function stub:CreateWindow()
        local w = {}
        function w:AddTab(_) 
            return {
                AddToggle=function()end,
                AddButton=function()end,
                AddDropdown=function()end,
                AddSlider=function()end
            }
        end
        return w
    end
    function stub:Notify(_) end
    stub.Options = {}
    return stub
end

local Fluent = loadFluent()
local Window = Fluent:CreateWindow({
    Title = "Allan Hub",
    SubTitle = "By Allan",
    TabWidth = 120,
    Size = UDim2.fromOffset(560, 420),
    Acrylic = true,
    Theme = "Dark"
})

local Tabs = {}

Tabs["Tab_Shop"] = Window:AddTab({ Title = "Tab Shop" })
Tabs["Tab_Status_And_Server"] = Window:AddTab({ Title = "Tab Status And Server" })
Tabs["Tab_Local_Player"] = Window:AddTab({ Title = "Tab Local Player" })
Tabs["Setting_Farm"] = Window:AddTab({ Title = "Setting Farm" })
Tabs["Tab_Farming"] = Window:AddTab({ Title = "Tab Farming" })
Tabs["Tab_Stack_Farm"] = Window:AddTab({ Title = "Tab Stack Farm" })
Tabs["Tab_Farming_Other"] = Window:AddTab({ Title = "Tab Farming Other" })
Tabs["Tab_Fruit_And_Raid"] = Window:AddTab({ Title = "Tab Fruit And Raid" })
Tabs["Tab_Sea_Event"] = Window:AddTab({ Title = "Tab Sea Event" })
Tabs["Tab_Setting_Select_Skill"] = Window:AddTab({ Title = "Tab Setting Select Skill" })
Tabs["Tab_Volcanic_Event"] = Window:AddTab({ Title = "Tab Volcanic Event" })
Tabs["Tab_Upgrade_Race"] = Window:AddTab({ Title = "Tab Upgrade Race" })
Tabs["Tab_Get_Items_And_Buy"] = Window:AddTab({ Title = "Tab Get Items And Buy" })
Tabs["Tab_ESP"] = Window:AddTab({ Title = "Tab ESP" })
Tabs["Tab_PVP"] = Window:AddTab({ Title = "Tab PVP" })
Tabs["Tab_Shop"]:AddButton({ Title = "Redeem Code", Callback = function() local f=_G["Redeem_Code"] or _G["OnRedeem_Code"] or _G["DoRedeem_Code"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Teleport Old World", Callback = function() local f=_G["Teleport_Old_World"] or _G["OnTeleport_Old_World"] or _G["DoTeleport_Old_World"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Teleport New World", Callback = function() local f=_G["Teleport_New_World"] or _G["OnTeleport_New_World"] or _G["DoTeleport_New_World"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Teleport Third Sea", Callback = function() local f=_G["Teleport_Third_Sea"] or _G["OnTeleport_Third_Sea"] or _G["DoTeleport_Third_Sea"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Black Leg", Callback = function() local f=_G["Black_Leg"] or _G["OnBlack_Leg"] or _G["DoBlack_Leg"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Fishman Karate", Callback = function() local f=_G["Fishman_Karate"] or _G["OnFishman_Karate"] or _G["DoFishman_Karate"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Electro", Callback = function() local f=_G["Electro"] or _G["OnElectro"] or _G["DoElectro"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Dragon Breath", Callback = function() local f=_G["Dragon_Breath"] or _G["OnDragon_Breath"] or _G["DoDragon_Breath"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "SuperHuman", Callback = function() local f=_G["SuperHuman"] or _G["OnSuperHuman"] or _G["DoSuperHuman"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Death Step", Callback = function() local f=_G["Death_Step"] or _G["OnDeath_Step"] or _G["DoDeath_Step"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Sharkman Karate", Callback = function() local f=_G["Sharkman_Karate"] or _G["OnSharkman_Karate"] or _G["DoSharkman_Karate"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Electric Claw", Callback = function() local f=_G["Electric_Claw"] or _G["OnElectric_Claw"] or _G["DoElectric_Claw"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Dragon Talon", Callback = function() local f=_G["Dragon_Talon"] or _G["OnDragon_Talon"] or _G["DoDragon_Talon"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "God Human", Callback = function() local f=_G["God_Human"] or _G["OnGod_Human"] or _G["DoGod_Human"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Sanguine Art", Callback = function() local f=_G["Sanguine_Art"] or _G["OnSanguine_Art"] or _G["DoSanguine_Art"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Skyjump [ $10,000 Beli ]", Callback = function() local f=_G["Skyjump__10000_Beli_"] or _G["OnSkyjump__10000_Beli_"] or _G["DoSkyjump__10000_Beli_"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Buso Haki [ $25,000 Beli ]", Callback = function() local f=_G["Buso_Haki__25000_Beli_"] or _G["OnBuso_Haki__25000_Beli_"] or _G["DoBuso_Haki__25000_Beli_"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Observation haki [ $750,000 Beli ]", Callback = function() local f=_G["Observation_haki__750000_Beli_"] or _G["OnObservation_haki__750000_Beli_"] or _G["DoObservation_haki__750000_Beli_"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Soru [ $100,000 Beli ]", Callback = function() local f=_G["Soru__100000_Beli_"] or _G["OnSoru__100000_Beli_"] or _G["DoSoru__100000_Beli_"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Buy Refund Stat (2500F)", Callback = function() local f=_G["Buy_Refund_Stat_2500F"] or _G["OnBuy_Refund_Stat_2500F"] or _G["DoBuy_Refund_Stat_2500F"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Buy Reroll Race (3000F)", Callback = function() local f=_G["Buy_Reroll_Race_3000F"] or _G["OnBuy_Reroll_Race_3000F"] or _G["DoBuy_Reroll_Race_3000F"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Buy Ghoul Race", Callback = function() local f=_G["Buy_Ghoul_Race"] or _G["OnBuy_Ghoul_Race"] or _G["DoBuy_Ghoul_Race"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Shop"]:AddButton({ Title = "Buy Cyborg Race (2500F)", Callback = function() local f=_G["Buy_Cyborg_Race_2500F"] or _G["OnBuy_Cyborg_Race_2500F"] or _G["DoBuy_Cyborg_Race_2500F"]; if type(f)=="function" then pcall(f) end end })
_G["Spam_Join"] = _G["Spam_Join"] or false
Tabs["Tab_Status_And_Server"]:AddToggle("Spam_Join", { Title = "Spam Join", Default = _G["Spam_Join"], Callback = function(v) _G["Spam_Join"] = v end })
Tabs["Tab_Status_And_Server"]:AddButton({ Title = "Join Server", Callback = function() local f=_G["Join_Server"] or _G["OnJoin_Server"] or _G["DoJoin_Server"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Status_And_Server"]:AddButton({ Title = "Copy JobId", Callback = function() local f=_G["Copy_JobId"] or _G["OnCopy_JobId"] or _G["DoCopy_JobId"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Status_And_Server"]:AddButton({ Title = "Rejoin Server", Callback = function() local f=_G["Rejoin_Server"] or _G["OnRejoin_Server"] or _G["DoRejoin_Server"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Status_And_Server"]:AddButton({ Title = "Hop Server", Callback = function() local f=_G["Hop_Server"] or _G["OnHop_Server"] or _G["DoHop_Server"]; if type(f)=="function" then pcall(f) end end })
_G["Auto_Stats"] = _G["Auto_Stats"] or false
Tabs["Tab_Local_Player"]:AddToggle("Auto_Stats", { Title = "Auto Stats", Default = _G["Auto_Stats"], Callback = function(v) _G["Auto_Stats"] = v end })
_G["Auto_Summon_Cake_Prince"] = _G["Auto_Summon_Cake_Prince"] or false
Tabs["Tab_Local_Player"]:AddToggle("Auto_Summon_Cake_Prince", { Title = "Auto Summon Cake Prince", Default = _G["Auto_Summon_Cake_Prince"], Callback = function(v) _G["Auto_Summon_Cake_Prince"] = v end })
_G["Black_Screen"] = _G["Black_Screen"] or false
Tabs["Tab_Local_Player"]:AddToggle("Black_Screen", { Title = "Black Screen", Default = _G["Black_Screen"], Callback = function(v) _G["Black_Screen"] = v end })
_G["White_Screen"] = _G["White_Screen"] or false
Tabs["Tab_Local_Player"]:AddToggle("White_Screen", { Title = "White Screen", Default = _G["White_Screen"], Callback = function(v) _G["White_Screen"] = v end })
_G["Hide_Mob"] = _G["Hide_Mob"] or false
Tabs["Tab_Local_Player"]:AddToggle("Hide_Mob", { Title = "Hide Mob", Default = _G["Hide_Mob"], Callback = function(v) _G["Hide_Mob"] = v end })
_G["Remove_Dame_Text"] = _G["Remove_Dame_Text"] or false
Tabs["Tab_Local_Player"]:AddToggle("Remove_Dame_Text", { Title = "Remove Dame Text", Default = _G["Remove_Dame_Text"], Callback = function(v) _G["Remove_Dame_Text"] = v end })
_G["Remove_Notification"] = _G["Remove_Notification"] or false
Tabs["Tab_Local_Player"]:AddToggle("Remove_Notification", { Title = "Remove Notification", Default = _G["Remove_Notification"], Callback = function(v) _G["Remove_Notification"] = v end })
_G["Auto_Rejoin_On_Kick"] = _G["Auto_Rejoin_On_Kick"] or false
Tabs["Tab_Local_Player"]:AddToggle("Auto_Rejoin_On_Kick", { Title = "Auto Rejoin On Kick", Default = _G["Auto_Rejoin_On_Kick"], Callback = function(v) _G["Auto_Rejoin_On_Kick"] = v end })
_G["Teleport_Island"] = _G["Teleport_Island"] or false
Tabs["Tab_Local_Player"]:AddToggle("Teleport_Island", { Title = "Teleport Island", Default = _G["Teleport_Island"], Callback = function(v) _G["Teleport_Island"] = v end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Stop Tween", Callback = function() local f=_G["Stop_Tween"] or _G["OnStop_Tween"] or _G["DoStop_Tween"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Show Item", Callback = function() local f=_G["Show_Item"] or _G["OnShow_Item"] or _G["DoShow_Item"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Open Devil Fruit Shop [ Mirage ]", Callback = function() local f=_G["Open_Devil_Fruit_Shop__Mirage_"] or _G["OnOpen_Devil_Fruit_Shop__Mirage_"] or _G["DoOpen_Devil_Fruit_Shop__Mirage_"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Open Devil Fruit Shop", Callback = function() local f=_G["Open_Devil_Fruit_Shop"] or _G["OnOpen_Devil_Fruit_Shop"] or _G["DoOpen_Devil_Fruit_Shop"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Open Title", Callback = function() local f=_G["Open_Title"] or _G["OnOpen_Title"] or _G["DoOpen_Title"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Open Color", Callback = function() local f=_G["Open_Color"] or _G["OnOpen_Color"] or _G["DoOpen_Color"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Boost FPS", Callback = function() local f=_G["Boost_FPS"] or _G["OnBoost_FPS"] or _G["DoBoost_FPS"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Change Team To Pirates", Callback = function() local f=_G["Change_Team_To_Pirates"] or _G["OnChange_Team_To_Pirates"] or _G["DoChange_Team_To_Pirates"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Change Team To Marines", Callback = function() local f=_G["Change_Team_To_Marines"] or _G["OnChange_Team_To_Marines"] or _G["DoChange_Team_To_Marines"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Local_Player"]:AddButton({ Title = "Rain Fruit", Callback = function() local f=_G["Rain_Fruit"] or _G["OnRain_Fruit"] or _G["DoRain_Fruit"]; if type(f)=="function" then pcall(f) end end })
_G["Dropdown"] = _G["Dropdown"] or nil
local values_Dropdown = _G["values_Dropdown"]; if type(values_Dropdown)~="table" or #values_Dropdown==0 then values_Dropdown = {"Selecione"} end
Tabs["Tab_Local_Player"]:AddDropdown("Dropdown", { Title = "Select Stats", Values = values_Dropdown, Multi = false, Default = values_Dropdown[1], Callback = function(choice) _G["Dropdown"] = choice local setter=_G["SetDropdown"] or _G["OnDropdown"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Dropdown_2"] = _G["Dropdown_2"] or nil
local values_Dropdown_2 = _G["values_Dropdown_2"]; if type(values_Dropdown_2)~="table" or #values_Dropdown_2==0 then values_Dropdown_2 = {"Selecione"} end
Tabs["Tab_Local_Player"]:AddDropdown("Dropdown_2", { Title = "Select Island", Values = values_Dropdown_2, Multi = false, Default = values_Dropdown_2[1], Callback = function(choice) _G["Dropdown_2"] = choice local setter=_G["SetDropdown_2"] or _G["OnDropdown_2"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Dropdown_3"] = _G["Dropdown_3"] or nil
local values_Dropdown_3 = _G["values_Dropdown_3"]; if type(values_Dropdown_3)~="table" or #values_Dropdown_3==0 then values_Dropdown_3 = {"Selecione"} end
Tabs["Tab_Local_Player"]:AddDropdown("Dropdown_3", { Title = "Select Island", Values = values_Dropdown_3, Multi = false, Default = values_Dropdown_3[1], Callback = function(choice) _G["Dropdown_3"] = choice local setter=_G["SetDropdown_3"] or _G["OnDropdown_3"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Dropdown_4"] = _G["Dropdown_4"] or nil
local values_Dropdown_4 = _G["values_Dropdown_4"]; if type(values_Dropdown_4)~="table" or #values_Dropdown_4==0 then values_Dropdown_4 = {"Selecione"} end
Tabs["Tab_Local_Player"]:AddDropdown("Dropdown_4", { Title = "Select Island", Values = values_Dropdown_4, Multi = false, Default = values_Dropdown_4[1], Callback = function(choice) _G["Dropdown_4"] = choice local setter=_G["SetDropdown_4"] or _G["OnDropdown_4"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Slider"] = _G["Slider"] or 0
Tabs["Tab_Local_Player"]:AddSlider("Slider", { Title = "Point Stats", Min = 0, Max = 100, Default = 50, Increment = 1, Rounding = 0, Callback = function(val) _G["Slider"]=val local setter=_G["SetSlider"] or _G["OnSlider"]; if type(setter)=="function" then pcall(setter, val) end end })
_G["Auto_Turn_On_Buso"] = _G["Auto_Turn_On_Buso"] or false
Tabs["Setting_Farm"]:AddToggle("Auto_Turn_On_Buso", { Title = "Auto Turn On Buso", Default = _G["Auto_Turn_On_Buso"], Callback = function(v) _G["Auto_Turn_On_Buso"] = v end })
_G["Auto_Turn_On_Race_V4"] = _G["Auto_Turn_On_Race_V4"] or false
Tabs["Setting_Farm"]:AddToggle("Auto_Turn_On_Race_V4", { Title = "Auto Turn On Race V4", Default = _G["Auto_Turn_On_Race_V4"], Callback = function(v) _G["Auto_Turn_On_Race_V4"] = v end })
_G["Auto_Turn_On_Race_V3"] = _G["Auto_Turn_On_Race_V3"] or false
Tabs["Setting_Farm"]:AddToggle("Auto_Turn_On_Race_V3", { Title = "Auto Turn On Race V3", Default = _G["Auto_Turn_On_Race_V3"], Callback = function(v) _G["Auto_Turn_On_Race_V3"] = v end })
_G["Auto_Set_Spawn_Point"] = _G["Auto_Set_Spawn_Point"] or false
Tabs["Setting_Farm"]:AddToggle("Auto_Set_Spawn_Point", { Title = "Auto Set Spawn Point", Default = _G["Auto_Set_Spawn_Point"], Callback = function(v) _G["Auto_Set_Spawn_Point"] = v end })
_G["Anti_AFK"] = _G["Anti_AFK"] or false
Tabs["Setting_Farm"]:AddToggle("Anti_AFK", { Title = "Anti AFK", Default = _G["Anti_AFK"], Callback = function(v) _G["Anti_AFK"] = v end })
_G["Reset_Teleport"] = _G["Reset_Teleport"] or false
Tabs["Setting_Farm"]:AddToggle("Reset_Teleport", { Title = "Reset Teleport", Default = _G["Reset_Teleport"], Callback = function(v) _G["Reset_Teleport"] = v end })
_G["Stop_Reset_Teleport_When_Have_Legendary"] = _G["Stop_Reset_Teleport_When_Have_Legendary"] or false
Tabs["Setting_Farm"]:AddToggle("Stop_Reset_Teleport_When_Have_Legendary", { Title = "Stop Reset Teleport When Have Legendary", Default = _G["Stop_Reset_Teleport_When_Have_Legendary"], Callback = function(v) _G["Stop_Reset_Teleport_When_Have_Legendary"] = v end })
_G["Fast_Attack"] = _G["Fast_Attack"] or false
Tabs["Setting_Farm"]:AddToggle("Fast_Attack", { Title = "Fast Attack", Default = _G["Fast_Attack"], Callback = function(v) _G["Fast_Attack"] = v end })
_G["Bring_Mob"] = _G["Bring_Mob"] or false
Tabs["Setting_Farm"]:AddToggle("Bring_Mob", { Title = "Bring Mob", Default = _G["Bring_Mob"], Callback = function(v) _G["Bring_Mob"] = v end })
_G["Spin_Position"] = _G["Spin_Position"] or false
Tabs["Setting_Farm"]:AddToggle("Spin_Position", { Title = "Spin Position", Default = _G["Spin_Position"], Callback = function(v) _G["Spin_Position"] = v end })
_G["Auto_Reduce_Lag_Farm_Safely"] = _G["Auto_Reduce_Lag_Farm_Safely"] or false
Tabs["Setting_Farm"]:AddToggle("Auto_Reduce_Lag_Farm_Safely", { Title = "Auto Reduce Lag Farm Safely", Default = _G["Auto_Reduce_Lag_Farm_Safely"], Callback = function(v) _G["Auto_Reduce_Lag_Farm_Safely"] = v end })
_G["Anti_Cheat_Farming"] = _G["Anti_Cheat_Farming"] or false
Tabs["Setting_Farm"]:AddToggle("Anti_Cheat_Farming", { Title = "Anti Cheat Farming", Default = _G["Anti_Cheat_Farming"], Callback = function(v) _G["Anti_Cheat_Farming"] = v end })
_G["DropdownFarm"] = _G["DropdownFarm"] or nil
local values_DropdownFarm = _G["values_DropdownFarm"]; if type(values_DropdownFarm)~="table" or #values_DropdownFarm==0 then values_DropdownFarm = {"Selecione"} end
Tabs["Setting_Farm"]:AddDropdown("DropdownFarm", { Title = "Select Weapon", Values = values_DropdownFarm, Multi = false, Default = values_DropdownFarm[1], Callback = function(choice) _G["DropdownFarm"] = choice local setter=_G["SetDropdownFarm"] or _G["OnDropdownFarm"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Slider"] = _G["Slider"] or 0
Tabs["Setting_Farm"]:AddSlider("Slider", { Title = "Farm Distance", Min = 0, Max = 100, Default = 50, Increment = 1, Rounding = 0, Callback = function(val) _G["Slider"]=val local setter=_G["SetSlider"] or _G["OnSlider"]; if type(setter)=="function" then pcall(setter, val) end end })
_G["Start_Farm"] = _G["Start_Farm"] or false
Tabs["Tab_Farming"]:AddToggle("Start_Farm", { Title = "Start Farm", Default = _G["Start_Farm"], Callback = function(v) _G["Start_Farm"] = v end })
_G["Farm_Material"] = _G["Farm_Material"] or false
Tabs["Tab_Farming"]:AddToggle("Farm_Material", { Title = "Farm Material", Default = _G["Farm_Material"], Callback = function(v) _G["Farm_Material"] = v end })
_G["Auto_Farm_Mastery"] = _G["Auto_Farm_Mastery"] or false
Tabs["Tab_Farming"]:AddToggle("Auto_Farm_Mastery", { Title = "Auto Farm Mastery", Default = _G["Auto_Farm_Mastery"], Callback = function(v) _G["Auto_Farm_Mastery"] = v end })
_G["Skill_Z"] = _G["Skill_Z"] or false
Tabs["Tab_Farming"]:AddToggle("Skill_Z", { Title = "Skill Z", Default = _G["Skill_Z"], Callback = function(v) _G["Skill_Z"] = v end })
_G["Skill_X"] = _G["Skill_X"] or false
Tabs["Tab_Farming"]:AddToggle("Skill_X", { Title = "Skill X", Default = _G["Skill_X"], Callback = function(v) _G["Skill_X"] = v end })
_G["Skill_C"] = _G["Skill_C"] or false
Tabs["Tab_Farming"]:AddToggle("Skill_C", { Title = "Skill C", Default = _G["Skill_C"], Callback = function(v) _G["Skill_C"] = v end })
_G["Skill_V"] = _G["Skill_V"] or false
Tabs["Tab_Farming"]:AddToggle("Skill_V", { Title = "Skill V", Default = _G["Skill_V"], Callback = function(v) _G["Skill_V"] = v end })
_G["Skill_F"] = _G["Skill_F"] or false
Tabs["Tab_Farming"]:AddToggle("Skill_F", { Title = "Skill F", Default = _G["Skill_F"], Callback = function(v) _G["Skill_F"] = v end })
Tabs["Tab_Farming"]:AddButton({ Title = "Copy discord invite link", Callback = function() local f=_G["Copy_discord_invite_link"] or _G["OnCopy_discord_invite_link"] or _G["DoCopy_discord_invite_link"]; if type(f)=="function" then pcall(f) end end })
_G["DropdownFarm"] = _G["DropdownFarm"] or nil
local values_DropdownFarm = _G["values_DropdownFarm"]; if type(values_DropdownFarm)~="table" or #values_DropdownFarm==0 then values_DropdownFarm = {"Selecione"} end
Tabs["Tab_Farming"]:AddDropdown("DropdownFarm", { Title = "Select Method Farm", Values = values_DropdownFarm, Multi = false, Default = values_DropdownFarm[1], Callback = function(choice) _G["DropdownFarm"] = choice local setter=_G["SetDropdownFarm"] or _G["OnDropdownFarm"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["MaterialListMon"] = _G["MaterialListMon"] or nil
local values_MaterialListMon = _G["values_MaterialListMon"]; if type(values_MaterialListMon)~="table" or #values_MaterialListMon==0 then values_MaterialListMon = {"Selecione"} end
Tabs["Tab_Farming"]:AddDropdown("MaterialListMon", { Title = "Select Material", Values = values_MaterialListMon, Multi = false, Default = values_MaterialListMon[1], Callback = function(choice) _G["MaterialListMon"] = choice local setter=_G["SetMaterialListMon"] or _G["OnMaterialListMon"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["DropdownFarm_2"] = _G["DropdownFarm_2"] or nil
local values_DropdownFarm_2 = _G["values_DropdownFarm_2"]; if type(values_DropdownFarm_2)~="table" or #values_DropdownFarm_2==0 then values_DropdownFarm_2 = {"Selecione"} end
Tabs["Tab_Farming"]:AddDropdown("DropdownFarm_2", { Title = "Select Method Farm Mastery", Values = values_DropdownFarm_2, Multi = false, Default = values_DropdownFarm_2[1], Callback = function(choice) _G["DropdownFarm_2"] = choice local setter=_G["SetDropdownFarm_2"] or _G["OnDropdownFarm_2"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Slider"] = _G["Slider"] or 0
Tabs["Tab_Farming"]:AddSlider("Slider", { Title = "Select Health [ % ]", Min = 0, Max = 100, Default = 50, Increment = 1, Rounding = 0, Callback = function(val) _G["Slider"]=val local setter=_G["SetSlider"] or _G["OnSlider"]; if type(setter)=="function" then pcall(setter, val) end end })
_G["Auto_Get_Melee"] = _G["Auto_Get_Melee"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Get_Melee", { Title = "Auto Get Melee", Default = _G["Auto_Get_Melee"], Callback = function(v) _G["Auto_Get_Melee"] = v end })
_G["Teleport_To_Fruit"] = _G["Teleport_To_Fruit"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Teleport_To_Fruit", { Title = "Teleport To Fruit", Default = _G["Teleport_To_Fruit"], Callback = function(v) _G["Teleport_To_Fruit"] = v end })
_G["Teleport_To_Fruit_Hop_Server_"] = _G["Teleport_To_Fruit_Hop_Server_"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Teleport_To_Fruit_Hop_Server_", { Title = "Teleport To Fruit [ Hop Server ]", Default = _G["Teleport_To_Fruit_Hop_Server_"], Callback = function(v) _G["Teleport_To_Fruit_Hop_Server_"] = v end })
_G["Auto_New_World"] = _G["Auto_New_World"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_New_World", { Title = "Auto New World", Default = _G["Auto_New_World"], Callback = function(v) _G["Auto_New_World"] = v end })
_G["Auto_Third_World"] = _G["Auto_Third_World"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Third_World", { Title = "Auto Third World", Default = _G["Auto_Third_World"], Callback = function(v) _G["Auto_Third_World"] = v end })
_G["Auto_Factory"] = _G["Auto_Factory"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Factory", { Title = "Auto Factory", Default = _G["Auto_Factory"], Callback = function(v) _G["Auto_Factory"] = v end })
_G["Auto_Pirate_Raid"] = _G["Auto_Pirate_Raid"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Pirate_Raid", { Title = "Auto Pirate Raid", Default = _G["Auto_Pirate_Raid"], Callback = function(v) _G["Auto_Pirate_Raid"] = v end })
_G["Auto_Elite_Hunter"] = _G["Auto_Elite_Hunter"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Elite_Hunter", { Title = "Auto Elite Hunter", Default = _G["Auto_Elite_Hunter"], Callback = function(v) _G["Auto_Elite_Hunter"] = v end })
_G["Hop_Server_Elite_Hunter"] = _G["Hop_Server_Elite_Hunter"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Hop_Server_Elite_Hunter", { Title = "Hop Server Elite Hunter", Default = _G["Hop_Server_Elite_Hunter"], Callback = function(v) _G["Hop_Server_Elite_Hunter"] = v end })
_G["Auto_Touch_Pad_Haki"] = _G["Auto_Touch_Pad_Haki"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Touch_Pad_Haki", { Title = "Auto Touch Pad Haki", Default = _G["Auto_Touch_Pad_Haki"], Callback = function(v) _G["Auto_Touch_Pad_Haki"] = v end })
_G["Auto_Rip_Indra"] = _G["Auto_Rip_Indra"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Rip_Indra", { Title = "Auto Rip Indra", Default = _G["Auto_Rip_Indra"], Callback = function(v) _G["Auto_Rip_Indra"] = v end })
_G["Auto_Soul_Reaper"] = _G["Auto_Soul_Reaper"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Soul_Reaper", { Title = "Auto Soul Reaper", Default = _G["Auto_Soul_Reaper"], Callback = function(v) _G["Auto_Soul_Reaper"] = v end })
_G["Auto_Pray"] = _G["Auto_Pray"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Pray", { Title = "Auto Pray", Default = _G["Auto_Pray"], Callback = function(v) _G["Auto_Pray"] = v end })
_G["Auto_Try_Luck"] = _G["Auto_Try_Luck"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Try_Luck", { Title = "Auto Try Luck", Default = _G["Auto_Try_Luck"], Callback = function(v) _G["Auto_Try_Luck"] = v end })
_G["Auto_Dough_King"] = _G["Auto_Dough_King"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Dough_King", { Title = "Auto Dough King", Default = _G["Auto_Dough_King"], Callback = function(v) _G["Auto_Dough_King"] = v end })
_G["Auto_Darkbeard"] = _G["Auto_Darkbeard"] or false
Tabs["Tab_Stack_Farm"]:AddToggle("Auto_Darkbeard", { Title = "Auto Darkbeard", Default = _G["Auto_Darkbeard"], Callback = function(v) _G["Auto_Darkbeard"] = v end })
_G["DropdownFarm"] = _G["DropdownFarm"] or nil
local values_DropdownFarm = _G["values_DropdownFarm"]; if type(values_DropdownFarm)~="table" or #values_DropdownFarm==0 then values_DropdownFarm = {"Selecione"} end
Tabs["Tab_Stack_Farm"]:AddDropdown("DropdownFarm", { Title = "Select Melee", Values = values_DropdownFarm, Multi = false, Default = values_DropdownFarm[1], Callback = function(choice) _G["DropdownFarm"] = choice local setter=_G["SetDropdownFarm"] or _G["OnDropdownFarm"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Auto_Quest_Dojo_Trainer"] = _G["Auto_Quest_Dojo_Trainer"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Auto_Quest_Dojo_Trainer", { Title = "Auto Quest Dojo Trainer", Default = _G["Auto_Quest_Dojo_Trainer"], Callback = function(v) _G["Auto_Quest_Dojo_Trainer"] = v end })
_G["Auto_Upgrade_Dragon_Talon"] = _G["Auto_Upgrade_Dragon_Talon"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Auto_Upgrade_Dragon_Talon", { Title = "Auto Upgrade Dragon Talon", Default = _G["Auto_Upgrade_Dragon_Talon"], Callback = function(v) _G["Auto_Upgrade_Dragon_Talon"] = v end })
_G["Auto_Attack_Hydra_Mob_And_Collect_Ember"] = _G["Auto_Attack_Hydra_Mob_And_Collect_Ember"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Auto_Attack_Hydra_Mob_And_Collect_Ember", { Title = "Auto Attack Hydra Mob And Collect Ember", Default = _G["Auto_Attack_Hydra_Mob_And_Collect_Ember"], Callback = function(v) _G["Auto_Attack_Hydra_Mob_And_Collect_Ember"] = v end })
_G["Auto_Collect_FireFlower"] = _G["Auto_Collect_FireFlower"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Auto_Collect_FireFlower", { Title = "Auto Collect FireFlower", Default = _G["Auto_Collect_FireFlower"], Callback = function(v) _G["Auto_Collect_FireFlower"] = v end })
_G["Auto_Chest"] = _G["Auto_Chest"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Auto_Chest", { Title = "Auto Chest", Default = _G["Auto_Chest"], Callback = function(v) _G["Auto_Chest"] = v end })
_G["Stop_When_Have_God_s_Chalice_Fist_Of_Darkness"] = _G["Stop_When_Have_God_s_Chalice_Fist_Of_Darkness"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Stop_When_Have_God_s_Chalice_Fist_Of_Darkness", { Title = "Stop When Have God's Chalice& Fist Of Darkness", Default = _G["Stop_When_Have_God_s_Chalice_Fist_Of_Darkness"], Callback = function(v) _G["Stop_When_Have_God_s_Chalice_Fist_Of_Darkness"] = v end })
_G["Auto_UP_Observation_V2"] = _G["Auto_UP_Observation_V2"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Auto_UP_Observation_V2", { Title = "Auto UP Observation V2", Default = _G["Auto_UP_Observation_V2"], Callback = function(v) _G["Auto_UP_Observation_V2"] = v end })
_G["Farm_Observation"] = _G["Farm_Observation"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Farm_Observation", { Title = "Farm Observation", Default = _G["Farm_Observation"], Callback = function(v) _G["Farm_Observation"] = v end })
_G["Auto_Kill_Boss"] = _G["Auto_Kill_Boss"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Auto_Kill_Boss", { Title = "Auto Kill Boss", Default = _G["Auto_Kill_Boss"], Callback = function(v) _G["Auto_Kill_Boss"] = v end })
_G["Auto_Kill_All_Boss"] = _G["Auto_Kill_All_Boss"] or false
Tabs["Tab_Farming_Other"]:AddToggle("Auto_Kill_All_Boss", { Title = "Auto Kill All Boss", Default = _G["Auto_Kill_All_Boss"], Callback = function(v) _G["Auto_Kill_All_Boss"] = v end })
Tabs["Tab_Farming_Other"]:AddButton({ Title = "Teleport To Dragon Dojo", Callback = function() local f=_G["Teleport_To_Dragon_Dojo"] or _G["OnTeleport_To_Dragon_Dojo"] or _G["DoTeleport_To_Dragon_Dojo"]; if type(f)=="function" then pcall(f) end end })
_G["Dropdown"] = _G["Dropdown"] or nil
local values_Dropdown = _G["values_Dropdown"]; if type(values_Dropdown)~="table" or #values_Dropdown==0 then values_Dropdown = {"Selecione"} end
Tabs["Tab_Farming_Other"]:AddDropdown("Dropdown", { Title = "Select Boss", Values = values_Dropdown, Multi = false, Default = values_Dropdown[1], Callback = function(choice) _G["Dropdown"] = choice local setter=_G["SetDropdown"] or _G["OnDropdown"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Random_Devil_Fruit"] = _G["Random_Devil_Fruit"] or false
Tabs["Tab_Fruit_And_Raid"]:AddToggle("Random_Devil_Fruit", { Title = "Random Devil Fruit", Default = _G["Random_Devil_Fruit"], Callback = function(v) _G["Random_Devil_Fruit"] = v end })
_G["Auto_Store_Fruit"] = _G["Auto_Store_Fruit"] or false
Tabs["Tab_Fruit_And_Raid"]:AddToggle("Auto_Store_Fruit", { Title = "Auto Store Fruit", Default = _G["Auto_Store_Fruit"], Callback = function(v) _G["Auto_Store_Fruit"] = v end })
_G["Buy_Blox_Fruit_Sniper_Shop"] = _G["Buy_Blox_Fruit_Sniper_Shop"] or false
Tabs["Tab_Fruit_And_Raid"]:AddToggle("Buy_Blox_Fruit_Sniper_Shop", { Title = "Buy Blox Fruit Sniper Shop", Default = _G["Buy_Blox_Fruit_Sniper_Shop"], Callback = function(v) _G["Buy_Blox_Fruit_Sniper_Shop"] = v end })
_G["Get_Fruit_In_Inventory_Low_Beli"] = _G["Get_Fruit_In_Inventory_Low_Beli"] or false
Tabs["Tab_Fruit_And_Raid"]:AddToggle("Get_Fruit_In_Inventory_Low_Beli", { Title = "Get Fruit In Inventory Low Beli", Default = _G["Get_Fruit_In_Inventory_Low_Beli"], Callback = function(v) _G["Get_Fruit_In_Inventory_Low_Beli"] = v end })
_G["Auto_Raid"] = _G["Auto_Raid"] or false
Tabs["Tab_Fruit_And_Raid"]:AddToggle("Auto_Raid", { Title = "Auto Raid", Default = _G["Auto_Raid"], Callback = function(v) _G["Auto_Raid"] = v end })
_G["Auto_Awaken_Fruit"] = _G["Auto_Awaken_Fruit"] or false
Tabs["Tab_Fruit_And_Raid"]:AddToggle("Auto_Awaken_Fruit", { Title = "Auto Awaken Fruit", Default = _G["Auto_Awaken_Fruit"], Callback = function(v) _G["Auto_Awaken_Fruit"] = v end })
Tabs["Tab_Fruit_And_Raid"]:AddButton({ Title = "Teleport To Lab", Callback = function() local f=_G["Teleport_To_Lab"] or _G["OnTeleport_To_Lab"] or _G["DoTeleport_To_Lab"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Fruit_And_Raid"]:AddButton({ Title = "Teleport To Lab", Callback = function() local f=_G["Teleport_To_Lab"] or _G["OnTeleport_To_Lab"] or _G["DoTeleport_To_Lab"]; if type(f)=="function" then pcall(f) end end })
_G["Dropdown"] = _G["Dropdown"] or nil
local values_Dropdown = _G["values_Dropdown"]; if type(values_Dropdown)~="table" or #values_Dropdown==0 then values_Dropdown = {"Selecione"} end
Tabs["Tab_Fruit_And_Raid"]:AddDropdown("Dropdown", { Title = "Blox Fruit Sniper Shop", Values = values_Dropdown, Multi = false, Default = values_Dropdown[1], Callback = function(choice) _G["Dropdown"] = choice local setter=_G["SetDropdown"] or _G["OnDropdown"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Dropdown_2"] = _G["Dropdown_2"] or nil
local values_Dropdown_2 = _G["values_Dropdown_2"]; if type(values_Dropdown_2)~="table" or #values_Dropdown_2==0 then values_Dropdown_2 = {"Selecione"} end
Tabs["Tab_Fruit_And_Raid"]:AddDropdown("Dropdown_2", { Title = "Select Raid", Values = values_Dropdown_2, Multi = false, Default = values_Dropdown_2[1], Callback = function(choice) _G["Dropdown_2"] = choice local setter=_G["SetDropdown_2"] or _G["OnDropdown_2"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Auto_Penetrate_Rocks_When_Boat_Runs"] = _G["Auto_Penetrate_Rocks_When_Boat_Runs"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Penetrate_Rocks_When_Boat_Runs", { Title = "Auto Penetrate Rocks When Boat Runs", Default = _G["Auto_Penetrate_Rocks_When_Boat_Runs"], Callback = function(v) _G["Auto_Penetrate_Rocks_When_Boat_Runs"] = v end })
_G["Auto_Sea_Event"] = _G["Auto_Sea_Event"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Sea_Event", { Title = "Auto Sea Event", Default = _G["Auto_Sea_Event"], Callback = function(v) _G["Auto_Sea_Event"] = v end })
_G["Auto_Shark"] = _G["Auto_Shark"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Shark", { Title = "Auto Shark", Default = _G["Auto_Shark"], Callback = function(v) _G["Auto_Shark"] = v end })
_G["Auto_Piranha"] = _G["Auto_Piranha"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Piranha", { Title = "Auto Piranha", Default = _G["Auto_Piranha"], Callback = function(v) _G["Auto_Piranha"] = v end })
_G["Auto_Fish_Crew"] = _G["Auto_Fish_Crew"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Fish_Crew", { Title = "Auto Fish Crew", Default = _G["Auto_Fish_Crew"], Callback = function(v) _G["Auto_Fish_Crew"] = v end })
_G["Auto_Ghost_Ship"] = _G["Auto_Ghost_Ship"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Ghost_Ship", { Title = "Auto Ghost Ship", Default = _G["Auto_Ghost_Ship"], Callback = function(v) _G["Auto_Ghost_Ship"] = v end })
_G["Auto_Pirate_Brigade"] = _G["Auto_Pirate_Brigade"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Pirate_Brigade", { Title = "Auto Pirate Brigade", Default = _G["Auto_Pirate_Brigade"], Callback = function(v) _G["Auto_Pirate_Brigade"] = v end })
_G["Auto_Pirate_Grand_Brigade"] = _G["Auto_Pirate_Grand_Brigade"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Pirate_Grand_Brigade", { Title = "Auto Pirate Grand Brigade", Default = _G["Auto_Pirate_Grand_Brigade"], Callback = function(v) _G["Auto_Pirate_Grand_Brigade"] = v end })
_G["Auto_Terror_Shark"] = _G["Auto_Terror_Shark"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Terror_Shark", { Title = "Auto Terror Shark", Default = _G["Auto_Terror_Shark"], Callback = function(v) _G["Auto_Terror_Shark"] = v end })
_G["Auto_Sea_Beast"] = _G["Auto_Sea_Beast"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Sea_Beast", { Title = "Auto Sea Beast", Default = _G["Auto_Sea_Beast"], Callback = function(v) _G["Auto_Sea_Beast"] = v end })
_G["Teleport_To_Kitsune_Island"] = _G["Teleport_To_Kitsune_Island"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Teleport_To_Kitsune_Island", { Title = "Teleport To Kitsune Island", Default = _G["Teleport_To_Kitsune_Island"], Callback = function(v) _G["Teleport_To_Kitsune_Island"] = v end })
_G["Auto_Summon_Soul_EmBer"] = _G["Auto_Summon_Soul_EmBer"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Summon_Soul_EmBer", { Title = "Auto Summon Soul EmBer", Default = _G["Auto_Summon_Soul_EmBer"], Callback = function(v) _G["Auto_Summon_Soul_EmBer"] = v end })
_G["Auto_Collect_Azure_Wisp"] = _G["Auto_Collect_Azure_Wisp"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Collect_Azure_Wisp", { Title = "Auto Collect Azure Wisp", Default = _G["Auto_Collect_Azure_Wisp"], Callback = function(v) _G["Auto_Collect_Azure_Wisp"] = v end })
_G["Auto_Trade_Azure_Ember"] = _G["Auto_Trade_Azure_Ember"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Trade_Azure_Ember", { Title = "Auto Trade Azure Ember", Default = _G["Auto_Trade_Azure_Ember"], Callback = function(v) _G["Auto_Trade_Azure_Ember"] = v end })
_G["Teleport_To_Frozen_Dimension"] = _G["Teleport_To_Frozen_Dimension"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Teleport_To_Frozen_Dimension", { Title = "Teleport To Frozen Dimension", Default = _G["Teleport_To_Frozen_Dimension"], Callback = function(v) _G["Teleport_To_Frozen_Dimension"] = v end })
_G["Auto_Attack_Leviathan"] = _G["Auto_Attack_Leviathan"] or false
Tabs["Tab_Sea_Event"]:AddToggle("Auto_Attack_Leviathan", { Title = "Auto Attack Leviathan", Default = _G["Auto_Attack_Leviathan"], Callback = function(v) _G["Auto_Attack_Leviathan"] = v end })
Tabs["Tab_Sea_Event"]:AddButton({ Title = "Trade Azure Wisp", Callback = function() local f=_G["Trade_Azure_Wisp"] or _G["OnTrade_Azure_Wisp"] or _G["DoTrade_Azure_Wisp"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Sea_Event"]:AddButton({ Title = "Buy Spy", Callback = function() local f=_G["Buy_Spy"] or _G["OnBuy_Spy"] or _G["DoBuy_Spy"]; if type(f)=="function" then pcall(f) end end })
_G["zoneselect"] = _G["zoneselect"] or nil
local values_zoneselect = _G["values_zoneselect"]; if type(values_zoneselect)~="table" or #values_zoneselect==0 then values_zoneselect = {"Selecione"} end
Tabs["Tab_Sea_Event"]:AddDropdown("zoneselect", { Title = "Select Zone", Values = values_zoneselect, Multi = false, Default = values_zoneselect[1], Callback = function(choice) _G["zoneselect"] = choice local setter=_G["Setzoneselect"] or _G["Onzoneselect"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["selectthuyen"] = _G["selectthuyen"] or nil
local values_selectthuyen = _G["values_selectthuyen"]; if type(values_selectthuyen)~="table" or #values_selectthuyen==0 then values_selectthuyen = {"Selecione"} end
Tabs["Tab_Sea_Event"]:AddDropdown("selectthuyen", { Title = "Select Boat", Values = values_selectthuyen, Multi = false, Default = values_selectthuyen[1], Callback = function(choice) _G["selectthuyen"] = choice local setter=_G["Setselectthuyen"] or _G["Onselectthuyen"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["boattween"] = _G["boattween"] or nil
local values_boattween = _G["values_boattween"]; if type(values_boattween)~="table" or #values_boattween==0 then values_boattween = {"Selecione"} end
Tabs["Tab_Sea_Event"]:AddDropdown("boattween", { Title = "Speed Tween Boat", Values = values_boattween, Multi = false, Default = values_boattween[1], Callback = function(choice) _G["boattween"] = choice local setter=_G["Setboattween"] or _G["Onboattween"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["SliderSpeedBoat"] = _G["SliderSpeedBoat"] or 0
Tabs["Tab_Sea_Event"]:AddSlider("SliderSpeedBoat", { Title = "Ship Speed", Min = 0, Max = 100, Default = 50, Increment = 1, Rounding = 0, Callback = function(val) _G["SliderSpeedBoat"]=val local setter=_G["SetSliderSpeedBoat"] or _G["OnSliderSpeedBoat"]; if type(setter)=="function" then pcall(setter, val) end end })
_G["Slider"] = _G["Slider"] or 0
Tabs["Tab_Sea_Event"]:AddSlider("Slider", { Title = "Set Azure Ember", Min = 0, Max = 100, Default = 50, Increment = 1, Rounding = 0, Callback = function(val) _G["Slider"]=val local setter=_G["SetSlider"] or _G["OnSlider"]; if type(setter)=="function" then pcall(setter, val) end end })
_G["Select_Use_Fruit"] = _G["Select_Use_Fruit"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Select_Use_Fruit", { Title = "Select Use Fruit", Default = _G["Select_Use_Fruit"], Callback = function(v) _G["Select_Use_Fruit"] = v end })
_G["Select_Use_Melee"] = _G["Select_Use_Melee"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Select_Use_Melee", { Title = "Select Use Melee", Default = _G["Select_Use_Melee"], Callback = function(v) _G["Select_Use_Melee"] = v end })
_G["Select_Use_Sword"] = _G["Select_Use_Sword"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Select_Use_Sword", { Title = "Select Use Sword", Default = _G["Select_Use_Sword"], Callback = function(v) _G["Select_Use_Sword"] = v end })
_G["Select_Use_Gun"] = _G["Select_Use_Gun"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Select_Use_Gun", { Title = "Select Use Gun", Default = _G["Select_Use_Gun"], Callback = function(v) _G["Select_Use_Gun"] = v end })
_G["Skill_Fruit_Z"] = _G["Skill_Fruit_Z"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Skill_Fruit_Z", { Title = "Skill Fruit Z", Default = _G["Skill_Fruit_Z"], Callback = function(v) _G["Skill_Fruit_Z"] = v end })
_G["Skill_Fruit_X"] = _G["Skill_Fruit_X"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Skill_Fruit_X", { Title = "Skill Fruit X", Default = _G["Skill_Fruit_X"], Callback = function(v) _G["Skill_Fruit_X"] = v end })
_G["Skill_Fruit_C"] = _G["Skill_Fruit_C"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Skill_Fruit_C", { Title = "Skill Fruit C", Default = _G["Skill_Fruit_C"], Callback = function(v) _G["Skill_Fruit_C"] = v end })
_G["Skill_Fruit_V"] = _G["Skill_Fruit_V"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Skill_Fruit_V", { Title = "Skill Fruit V", Default = _G["Skill_Fruit_V"], Callback = function(v) _G["Skill_Fruit_V"] = v end })
_G["Skill_Fruit_F"] = _G["Skill_Fruit_F"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Skill_Fruit_F", { Title = "Skill Fruit F", Default = _G["Skill_Fruit_F"], Callback = function(v) _G["Skill_Fruit_F"] = v end })
_G["Skill_Melee_Z"] = _G["Skill_Melee_Z"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Skill_Melee_Z", { Title = "Skill Melee Z", Default = _G["Skill_Melee_Z"], Callback = function(v) _G["Skill_Melee_Z"] = v end })
_G["Skill_Melee_X"] = _G["Skill_Melee_X"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Skill_Melee_X", { Title = "Skill Melee X", Default = _G["Skill_Melee_X"], Callback = function(v) _G["Skill_Melee_X"] = v end })
_G["Skill_Melee_C"] = _G["Skill_Melee_C"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Skill_Melee_C", { Title = "Skill Melee C", Default = _G["Skill_Melee_C"], Callback = function(v) _G["Skill_Melee_C"] = v end })
_G["Sword_And_Gun_Skill_Z"] = _G["Sword_And_Gun_Skill_Z"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Sword_And_Gun_Skill_Z", { Title = "Sword And Gun Skill Z", Default = _G["Sword_And_Gun_Skill_Z"], Callback = function(v) _G["Sword_And_Gun_Skill_Z"] = v end })
_G["Sword_And_Gun_Skill_X"] = _G["Sword_And_Gun_Skill_X"] or false
Tabs["Tab_Setting_Select_Skill"]:AddToggle("Sword_And_Gun_Skill_X", { Title = "Sword And Gun Skill X", Default = _G["Sword_And_Gun_Skill_X"], Callback = function(v) _G["Sword_And_Gun_Skill_X"] = v end })
_G["Teleport_Prehistoric_Island"] = _G["Teleport_Prehistoric_Island"] or false
Tabs["Tab_Volcanic_Event"]:AddToggle("Teleport_Prehistoric_Island", { Title = "Teleport Prehistoric Island", Default = _G["Teleport_Prehistoric_Island"], Callback = function(v) _G["Teleport_Prehistoric_Island"] = v end })
_G["Auto_Event_Volcano_Island_Defense"] = _G["Auto_Event_Volcano_Island_Defense"] or false
Tabs["Tab_Volcanic_Event"]:AddToggle("Auto_Event_Volcano_Island_Defense", { Title = "Auto Event Volcano Island Defense", Default = _G["Auto_Event_Volcano_Island_Defense"], Callback = function(v) _G["Auto_Event_Volcano_Island_Defense"] = v end })
_G["Auto_Kill_Aura_Golems"] = _G["Auto_Kill_Aura_Golems"] or false
Tabs["Tab_Volcanic_Event"]:AddToggle("Auto_Kill_Aura_Golems", { Title = "Auto Kill Aura Golems", Default = _G["Auto_Kill_Aura_Golems"], Callback = function(v) _G["Auto_Kill_Aura_Golems"] = v end })
_G["Auto_Collect_Bone"] = _G["Auto_Collect_Bone"] or false
Tabs["Tab_Volcanic_Event"]:AddToggle("Auto_Collect_Bone", { Title = "Auto Collect Bone", Default = _G["Auto_Collect_Bone"], Callback = function(v) _G["Auto_Collect_Bone"] = v end })
_G["Auto_Collect_Egg"] = _G["Auto_Collect_Egg"] or false
Tabs["Tab_Volcanic_Event"]:AddToggle("Auto_Collect_Egg", { Title = "Auto Collect Egg", Default = _G["Auto_Collect_Egg"], Callback = function(v) _G["Auto_Collect_Egg"] = v end })
_G["Auto_Use_Skill_Melee"] = _G["Auto_Use_Skill_Melee"] or false
Tabs["Tab_Volcanic_Event"]:AddToggle("Auto_Use_Skill_Melee", { Title = "Auto Use Skill Melee", Default = _G["Auto_Use_Skill_Melee"], Callback = function(v) _G["Auto_Use_Skill_Melee"] = v end })
_G["Auto_Use_Skill_Sword"] = _G["Auto_Use_Skill_Sword"] or false
Tabs["Tab_Volcanic_Event"]:AddToggle("Auto_Use_Skill_Sword", { Title = "Auto Use Skill Sword", Default = _G["Auto_Use_Skill_Sword"], Callback = function(v) _G["Auto_Use_Skill_Sword"] = v end })
_G["Auto_Use_Skill_Gun"] = _G["Auto_Use_Skill_Gun"] or false
Tabs["Tab_Volcanic_Event"]:AddToggle("Auto_Use_Skill_Gun", { Title = "Auto Use Skill Gun", Default = _G["Auto_Use_Skill_Gun"], Callback = function(v) _G["Auto_Use_Skill_Gun"] = v end })
Tabs["Tab_Volcanic_Event"]:AddButton({ Title = "Destroy Lava In Prehistoric Island", Callback = function() local f=_G["Destroy_Lava_In_Prehistoric_Island"] or _G["OnDestroy_Lava_In_Prehistoric_Island"] or _G["DoDestroy_Lava_In_Prehistoric_Island"]; if type(f)=="function" then pcall(f) end end })
Tabs["Tab_Volcanic_Event"]:AddButton({ Title = "Crafting Volcanic Magnet", Callback = function() local f=_G["Crafting_Volcanic_Magnet"] or _G["OnCrafting_Volcanic_Magnet"] or _G["DoCrafting_Volcanic_Magnet"]; if type(f)=="function" then pcall(f) end end })
_G["Teleport_To_The_Draco_Clan_Trial_Door"] = _G["Teleport_To_The_Draco_Clan_Trial_Door"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Teleport_To_The_Draco_Clan_Trial_Door", { Title = "Teleport To The Draco Clan Trial Door", Default = _G["Teleport_To_The_Draco_Clan_Trial_Door"], Callback = function(v) _G["Teleport_To_The_Draco_Clan_Trial_Door"] = v end })
_G["Auto_Upgrade_Race_V2"] = _G["Auto_Upgrade_Race_V2"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Auto_Upgrade_Race_V2", { Title = "Auto Upgrade Race V2", Default = _G["Auto_Upgrade_Race_V2"], Callback = function(v) _G["Auto_Upgrade_Race_V2"] = v end })
_G["Auto_Get_Cyborg"] = _G["Auto_Get_Cyborg"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Auto_Get_Cyborg", { Title = "Auto Get Cyborg", Default = _G["Auto_Get_Cyborg"], Callback = function(v) _G["Auto_Get_Cyborg"] = v end })
_G["Auto_Get_Ghoul"] = _G["Auto_Get_Ghoul"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Auto_Get_Ghoul", { Title = "Auto Get Ghoul", Default = _G["Auto_Get_Ghoul"], Callback = function(v) _G["Auto_Get_Ghoul"] = v end })
_G["No_Frog"] = _G["No_Frog"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("No_Frog", { Title = "No Frog", Default = _G["No_Frog"], Callback = function(v) _G["No_Frog"] = v end })
_G["Teleport_Ancient_Clock"] = _G["Teleport_Ancient_Clock"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Teleport_Ancient_Clock", { Title = "Teleport Ancient Clock", Default = _G["Teleport_Ancient_Clock"], Callback = function(v) _G["Teleport_Ancient_Clock"] = v end })
_G["Auto_Buy_Gear"] = _G["Auto_Buy_Gear"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Auto_Buy_Gear", { Title = "Auto Buy Gear", Default = _G["Auto_Buy_Gear"], Callback = function(v) _G["Auto_Buy_Gear"] = v end })
_G["Auto_Finish_Train_Quest"] = _G["Auto_Finish_Train_Quest"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Auto_Finish_Train_Quest", { Title = "Auto Finish Train Quest", Default = _G["Auto_Finish_Train_Quest"], Callback = function(v) _G["Auto_Finish_Train_Quest"] = v end })
_G["Teleport_To_Migare_Island"] = _G["Teleport_To_Migare_Island"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Teleport_To_Migare_Island", { Title = "Teleport To Migare Island", Default = _G["Teleport_To_Migare_Island"], Callback = function(v) _G["Teleport_To_Migare_Island"] = v end })
_G["Teleport_To_Highest_Point"] = _G["Teleport_To_Highest_Point"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Teleport_To_Highest_Point", { Title = "Teleport To Highest Point", Default = _G["Teleport_To_Highest_Point"], Callback = function(v) _G["Teleport_To_Highest_Point"] = v end })
_G["Teleport_To_Advanced_Fruit_Dealer"] = _G["Teleport_To_Advanced_Fruit_Dealer"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Teleport_To_Advanced_Fruit_Dealer", { Title = "Teleport To Advanced Fruit Dealer", Default = _G["Teleport_To_Advanced_Fruit_Dealer"], Callback = function(v) _G["Teleport_To_Advanced_Fruit_Dealer"] = v end })
_G["Lock_Moon_And_On_Race_V3"] = _G["Lock_Moon_And_On_Race_V3"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Lock_Moon_And_On_Race_V3", { Title = "Lock Moon And On Race V3", Default = _G["Lock_Moon_And_On_Race_V3"], Callback = function(v) _G["Lock_Moon_And_On_Race_V3"] = v end })
_G["Teleport_To_Blue_Gear"] = _G["Teleport_To_Blue_Gear"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Teleport_To_Blue_Gear", { Title = "Teleport To Blue Gear", Default = _G["Teleport_To_Blue_Gear"], Callback = function(v) _G["Teleport_To_Blue_Gear"] = v end })
_G["Auto_Trial_Race"] = _G["Auto_Trial_Race"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Auto_Trial_Race", { Title = "Auto Trial Race", Default = _G["Auto_Trial_Race"], Callback = function(v) _G["Auto_Trial_Race"] = v end })
_G["Auto_Kill_Player_After_Trial_V4"] = _G["Auto_Kill_Player_After_Trial_V4"] or false
Tabs["Tab_Upgrade_Race"]:AddToggle("Auto_Kill_Player_After_Trial_V4", { Title = "Auto Kill Player After Trial V4", Default = _G["Auto_Kill_Player_After_Trial_V4"], Callback = function(v) _G["Auto_Kill_Player_After_Trial_V4"] = v end })
Tabs["Tab_Upgrade_Race"]:AddButton({ Title = "Teleport To Trial Door", Callback = function() local f=_G["Teleport_To_Trial_Door"] or _G["OnTeleport_To_Trial_Door"] or _G["DoTeleport_To_Trial_Door"]; if type(f)=="function" then pcall(f) end end })
_G["Auto_Trade_Bone"] = _G["Auto_Trade_Bone"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Auto_Trade_Bone", { Title = "Auto Trade Bone", Default = _G["Auto_Trade_Bone"], Callback = function(v) _G["Auto_Trade_Bone"] = v end })
_G["Auto_Buy_Legendary_Sword"] = _G["Auto_Buy_Legendary_Sword"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Auto_Buy_Legendary_Sword", { Title = "Auto Buy Legendary Sword", Default = _G["Auto_Buy_Legendary_Sword"], Callback = function(v) _G["Auto_Buy_Legendary_Sword"] = v end })
_G["Auto_Buy_Haki_Color"] = _G["Auto_Buy_Haki_Color"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Auto_Buy_Haki_Color", { Title = "Auto Buy Haki Color", Default = _G["Auto_Buy_Haki_Color"], Callback = function(v) _G["Auto_Buy_Haki_Color"] = v end })
_G["Hop_Server_Haki_color_or_Legendary_Sword_"] = _G["Hop_Server_Haki_color_or_Legendary_Sword_"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Hop_Server_Haki_color_or_Legendary_Sword_", { Title = "Hop Server [ Haki color or Legendary Sword]", Default = _G["Hop_Server_Haki_color_or_Legendary_Sword_"], Callback = function(v) _G["Hop_Server_Haki_color_or_Legendary_Sword_"] = v end })
_G["Auto_Get_Rainbow_Haki"] = _G["Auto_Get_Rainbow_Haki"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Auto_Get_Rainbow_Haki", { Title = "Auto Get Rainbow Haki", Default = _G["Auto_Get_Rainbow_Haki"], Callback = function(v) _G["Auto_Get_Rainbow_Haki"] = v end })
_G["Auto_Skull_Guitar"] = _G["Auto_Skull_Guitar"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Auto_Skull_Guitar", { Title = "Auto Skull Guitar", Default = _G["Auto_Skull_Guitar"], Callback = function(v) _G["Auto_Skull_Guitar"] = v end })
_G["Auto_Get_CDK"] = _G["Auto_Get_CDK"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Auto_Get_CDK", { Title = "Auto Get CDK", Default = _G["Auto_Get_CDK"], Callback = function(v) _G["Auto_Get_CDK"] = v end })
_G["Auto_Yama"] = _G["Auto_Yama"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Auto_Yama", { Title = "Auto Yama", Default = _G["Auto_Yama"], Callback = function(v) _G["Auto_Yama"] = v end })
_G["Auto_Tushita"] = _G["Auto_Tushita"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Auto_Tushita", { Title = "Auto Tushita", Default = _G["Auto_Tushita"], Callback = function(v) _G["Auto_Tushita"] = v end })
_G["Auto_Saber"] = _G["Auto_Saber"] or false
Tabs["Tab_Get_Items_And_Buy"]:AddToggle("Auto_Saber", { Title = "Auto Saber", Default = _G["Auto_Saber"], Callback = function(v) _G["Auto_Saber"] = v end })
_G["ESP_Island"] = _G["ESP_Island"] or false
Tabs["Tab_ESP"]:AddToggle("ESP_Island", { Title = "ESP Island", Default = _G["ESP_Island"], Callback = function(v) _G["ESP_Island"] = v end })
_G["ESP_Fruit"] = _G["ESP_Fruit"] or false
Tabs["Tab_ESP"]:AddToggle("ESP_Fruit", { Title = "ESP Fruit", Default = _G["ESP_Fruit"], Callback = function(v) _G["ESP_Fruit"] = v end })
_G["ESP_Player"] = _G["ESP_Player"] or false
Tabs["Tab_ESP"]:AddToggle("ESP_Player", { Title = "ESP Player", Default = _G["ESP_Player"], Callback = function(v) _G["ESP_Player"] = v end })
_G["Teleport_Player"] = _G["Teleport_Player"] or false
Tabs["Tab_PVP"]:AddToggle("Teleport_Player", { Title = "Teleport Player", Default = _G["Teleport_Player"], Callback = function(v) _G["Teleport_Player"] = v end })
_G["Auto_Aimbot"] = _G["Auto_Aimbot"] or false
Tabs["Tab_PVP"]:AddToggle("Auto_Aimbot", { Title = "Auto Aimbot", Default = _G["Auto_Aimbot"], Callback = function(v) _G["Auto_Aimbot"] = v end })
_G["Auto_Aimbot_Gun"] = _G["Auto_Aimbot_Gun"] or false
Tabs["Tab_PVP"]:AddToggle("Auto_Aimbot_Gun", { Title = "Auto Aimbot Gun", Default = _G["Auto_Aimbot_Gun"], Callback = function(v) _G["Auto_Aimbot_Gun"] = v end })
_G["Safe_Modes"] = _G["Safe_Modes"] or false
Tabs["Tab_PVP"]:AddToggle("Safe_Modes", { Title = "Safe Modes", Default = _G["Safe_Modes"], Callback = function(v) _G["Safe_Modes"] = v end })
_G["Walk_On_Water"] = _G["Walk_On_Water"] or false
Tabs["Tab_PVP"]:AddToggle("Walk_On_Water", { Title = "Walk On Water", Default = _G["Walk_On_Water"], Callback = function(v) _G["Walk_On_Water"] = v end })
_G["No_Clip"] = _G["No_Clip"] or false
Tabs["Tab_PVP"]:AddToggle("No_Clip", { Title = "No Clip", Default = _G["No_Clip"], Callback = function(v) _G["No_Clip"] = v end })
_G["Change_WalkSpeed"] = _G["Change_WalkSpeed"] or false
Tabs["Tab_PVP"]:AddToggle("Change_WalkSpeed", { Title = "Change WalkSpeed", Default = _G["Change_WalkSpeed"], Callback = function(v) _G["Change_WalkSpeed"] = v end })
_G["Dropdown"] = _G["Dropdown"] or nil
local values_Dropdown = _G["values_Dropdown"]; if type(values_Dropdown)~="table" or #values_Dropdown==0 then values_Dropdown = {"Selecione"} end
Tabs["Tab_PVP"]:AddDropdown("Dropdown", { Title = "Select Player PVP", Values = values_Dropdown, Multi = false, Default = values_Dropdown[1], Callback = function(choice) _G["Dropdown"] = choice local setter=_G["SetDropdown"] or _G["OnDropdown"]; if type(setter)=="function" then pcall(setter, choice) end end })
_G["Slider"] = _G["Slider"] or 0
Tabs["Tab_PVP"]:AddSlider("Slider", { Title = "Safe Mode At", Min = 0, Max = 100, Default = 50, Increment = 1, Rounding = 0, Callback = function(val) _G["Slider"]=val local setter=_G["SetSlider"] or _G["OnSlider"]; if type(setter)=="function" then pcall(setter, val) end end })
